trigger:
- master

# Starter pipeline
- task: Xcode@5
  inputs:
    actions: 'build'
    packageApp: false
    scheme: ''
    sdk: 'iphoneos'
    configuration: 'Release'
    xcWorkspacePath: '**/*.xcodeproj/AzureTest.xcworkspace'
    xcodeVersion: 'default' # Options: 8, 9, 10, default, specifyPath
    signingOption: 'default' # Options: nosign, default, manual, auto
    useXcpretty: 'false' # Makes it easier to diagnose build failures
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

steps:
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificatesDist'
    certPwd: $()

- task: InstallAppleProvisioningProfile@1
  inputs:
    provProfileSecureFile: 'VirtualForce_Distribution_Profile.mobileprovision'

  
- script: /usr/local/bin/pod install
  displayName: 'pod install using a script'

- task: CocoaPods@0
  displayName: 'pod install using the CocoaPods task with defaults'

- task: CocoaPods@0
  inputs:
    forceRepoUpdate: true
    projectDirectory: '$(system.defaultWorkingDirectory)'
    displayName: 'pod install using the CocoaPods task with a forced repo update and a custom project directory'


  - task: CopyFiles@2
  inputs:
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'
- task: PublishBuildArtifacts@1


